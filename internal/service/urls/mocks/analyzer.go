// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dsbasko/yandex-go-shortener/internal/service/urls (interfaces: Analyzer)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/analyzer.go -package=mock_urls github.com/dsbasko/yandex-go-shortener/internal/service/urls Analyzer
//

// Package mock_urls is a generated GoMock package.
package mock_urls

import (
	context "context"
	reflect "reflect"

	entity "github.com/dsbasko/yandex-go-shortener/internal/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockAnalyzer is a mock of Analyzer interface.
type MockAnalyzer struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyzerMockRecorder
}

// MockAnalyzerMockRecorder is the mock recorder for MockAnalyzer.
type MockAnalyzerMockRecorder struct {
	mock *MockAnalyzer
}

// NewMockAnalyzer creates a new mock instance.
func NewMockAnalyzer(ctrl *gomock.Controller) *MockAnalyzer {
	mock := &MockAnalyzer{ctrl: ctrl}
	mock.recorder = &MockAnalyzerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyzer) EXPECT() *MockAnalyzerMockRecorder {
	return m.recorder
}

// Stats mocks base method.
func (m *MockAnalyzer) Stats(arg0 context.Context) (entity.URLStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stats", arg0)
	ret0, _ := ret[0].(entity.URLStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stats indicates an expected call of Stats.
func (mr *MockAnalyzerMockRecorder) Stats(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*MockAnalyzer)(nil).Stats), arg0)
}
