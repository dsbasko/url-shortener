// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dsbasko/yandex-go-shortener/internal/service/urls (interfaces: URLMutator)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/url-mutator.go -package=mock_urls github.com/dsbasko/yandex-go-shortener/internal/service/urls URLMutator
//

// Package mock_urls is a generated GoMock package.
package mock_urls

import (
	context "context"
	reflect "reflect"

	entities "github.com/dsbasko/yandex-go-shortener/internal/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockURLMutator is a mock of URLMutator interface.
type MockURLMutator struct {
	ctrl     *gomock.Controller
	recorder *MockURLMutatorMockRecorder
}

// MockURLMutatorMockRecorder is the mock recorder for MockURLMutator.
type MockURLMutatorMockRecorder struct {
	mock *MockURLMutator
}

// NewMockURLMutator creates a new mock instance.
func NewMockURLMutator(ctrl *gomock.Controller) *MockURLMutator {
	mock := &MockURLMutator{ctrl: ctrl}
	mock.recorder = &MockURLMutatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLMutator) EXPECT() *MockURLMutatorMockRecorder {
	return m.recorder
}

// CreateURL mocks base method.
func (m *MockURLMutator) CreateURL(arg0 context.Context, arg1 entities.URL) (entities.URL, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateURL", arg0, arg1)
	ret0, _ := ret[0].(entities.URL)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateURL indicates an expected call of CreateURL.
func (mr *MockURLMutatorMockRecorder) CreateURL(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateURL", reflect.TypeOf((*MockURLMutator)(nil).CreateURL), arg0, arg1)
}

// CreateURLs mocks base method.
func (m *MockURLMutator) CreateURLs(arg0 context.Context, arg1 []entities.URL) ([]entities.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateURLs", arg0, arg1)
	ret0, _ := ret[0].([]entities.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateURLs indicates an expected call of CreateURLs.
func (mr *MockURLMutatorMockRecorder) CreateURLs(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateURLs", reflect.TypeOf((*MockURLMutator)(nil).CreateURLs), arg0, arg1)
}

// DeleteURLs mocks base method.
func (m *MockURLMutator) DeleteURLs(arg0 context.Context, arg1 []entities.URL) ([]entities.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteURLs", arg0, arg1)
	ret0, _ := ret[0].([]entities.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteURLs indicates an expected call of DeleteURLs.
func (mr *MockURLMutatorMockRecorder) DeleteURLs(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteURLs", reflect.TypeOf((*MockURLMutator)(nil).DeleteURLs), arg0, arg1)
}
